//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Claro.SIACU.ProxyService.SAP.Operations
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SimcardsPortTypeSOAP11Binding", Namespace="http://claro.com.pe/eai/ws/sap/simcards")]
    public partial class ebsSimcards : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback consultarTelefonoDispOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarTelefonoTodosOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarStatusTelefonoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cambiarStatusTelefonoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cambiarStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback reversionCambioNumeroOperationCompleted;
        
        private System.Threading.SendOrPostCallback registroIMSIPortabilidadOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarNroTelefOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarNroTelefOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarMSISDNreservaOperationCompleted;
        
        private System.Threading.SendOrPostCallback rollbackPelVendidoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cambiarStatusVendidoOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerDatosNroTelefOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerNroTelefSerieOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerNroTelefOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerHLROperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarSimcardPorReposicionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ebsSimcards() {
            this.Url = global::Claro.SIACU.ProxyService.Properties.Settings.Default.Claro_SIACU_ProxyService_SAP_Operations_ebsSimcards;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event consultarTelefonoDispCompletedEventHandler consultarTelefonoDispCompleted;
        
        /// <remarks/>
        public event consultarTelefonoTodosCompletedEventHandler consultarTelefonoTodosCompleted;
        
        /// <remarks/>
        public event consultarStatusTelefonoCompletedEventHandler consultarStatusTelefonoCompleted;
        
        /// <remarks/>
        public event cambiarStatusTelefonoCompletedEventHandler cambiarStatusTelefonoCompleted;
        
        /// <remarks/>
        public event cambiarStatusCompletedEventHandler cambiarStatusCompleted;
        
        /// <remarks/>
        public event reversionCambioNumeroCompletedEventHandler reversionCambioNumeroCompleted;
        
        /// <remarks/>
        public event registroIMSIPortabilidadCompletedEventHandler registroIMSIPortabilidadCompleted;
        
        /// <remarks/>
        public event actualizarNroTelefCompletedEventHandler actualizarNroTelefCompleted;
        
        /// <remarks/>
        public event eliminarNroTelefCompletedEventHandler eliminarNroTelefCompleted;
        
        /// <remarks/>
        public event listarMSISDNreservaCompletedEventHandler listarMSISDNreservaCompleted;
        
        /// <remarks/>
        public event rollbackPelVendidoCompletedEventHandler rollbackPelVendidoCompleted;
        
        /// <remarks/>
        public event cambiarStatusVendidoCompletedEventHandler cambiarStatusVendidoCompleted;
        
        /// <remarks/>
        public event obtenerDatosNroTelefCompletedEventHandler obtenerDatosNroTelefCompleted;
        
        /// <remarks/>
        public event obtenerNroTelefSerieCompletedEventHandler obtenerNroTelefSerieCompleted;
        
        /// <remarks/>
        public event obtenerNroTelefCompletedEventHandler obtenerNroTelefCompleted;
        
        /// <remarks/>
        public event obtenerHLRCompletedEventHandler obtenerHLRCompleted;
        
        /// <remarks/>
        public event actualizarSimcardPorReposicionCompletedEventHandler actualizarSimcardPorReposicionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/consultarTelefonoDisp", RequestElementName="consultarTelefonoDispRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string consultarTelefonoDisp(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string cantidadTelef, string clasifRed, string tipoCliente, string codigoNacional, string tipoNroTelef, string codigoHlr, string nroTelef, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itDataRow", IsNullable=false)] out itDataType[] itData, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("consultarTelefonoDisp", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        cantidadTelef,
                        clasifRed,
                        tipoCliente,
                        codigoNacional,
                        tipoNroTelef,
                        codigoHlr,
                        nroTelef});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itData = ((itDataType[])(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarTelefonoDispAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string cantidadTelef, string clasifRed, string tipoCliente, string codigoNacional, string tipoNroTelef, string codigoHlr, string nroTelef) {
            this.consultarTelefonoDispAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, cantidadTelef, clasifRed, tipoCliente, codigoNacional, tipoNroTelef, codigoHlr, nroTelef, null);
        }
        
        /// <remarks/>
        public void consultarTelefonoDispAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string cantidadTelef, string clasifRed, string tipoCliente, string codigoNacional, string tipoNroTelef, string codigoHlr, string nroTelef, object userState) {
            if ((this.consultarTelefonoDispOperationCompleted == null)) {
                this.consultarTelefonoDispOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarTelefonoDispOperationCompleted);
            }
            this.InvokeAsync("consultarTelefonoDisp", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        cantidadTelef,
                        clasifRed,
                        tipoCliente,
                        codigoNacional,
                        tipoNroTelef,
                        codigoHlr,
                        nroTelef}, this.consultarTelefonoDispOperationCompleted, userState);
        }
        
        private void OnconsultarTelefonoDispOperationCompleted(object arg) {
            if ((this.consultarTelefonoDispCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarTelefonoDispCompleted(this, new consultarTelefonoDispCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/consultarTelefonoTodos", RequestElementName="consultarTelefonoTodosRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string consultarTelefonoTodos(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itNumTelefRow", IsNullable=false)] out itNumTelefType[] itNumTelef, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("consultarTelefonoTodos", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itNumTelef = ((itNumTelefType[])(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarTelefonoTodosAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef) {
            this.consultarTelefonoTodosAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, null);
        }
        
        /// <remarks/>
        public void consultarTelefonoTodosAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, object userState) {
            if ((this.consultarTelefonoTodosOperationCompleted == null)) {
                this.consultarTelefonoTodosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarTelefonoTodosOperationCompleted);
            }
            this.InvokeAsync("consultarTelefonoTodos", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef}, this.consultarTelefonoTodosOperationCompleted, userState);
        }
        
        private void OnconsultarTelefonoTodosOperationCompleted(object arg) {
            if ((this.consultarTelefonoTodosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarTelefonoTodosCompleted(this, new consultarTelefonoTodosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/consultarStatusTelefono", RequestElementName="consultarStatusTelefonoRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string consultarStatusTelefono(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("gtOutTabRow", IsNullable=false)] out gtOutTabType[] gtOutTab, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("consultarStatusTelefono", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            gtOutTab = ((gtOutTabType[])(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarStatusTelefonoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie) {
            this.consultarStatusTelefonoAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, nroSerie, null);
        }
        
        /// <remarks/>
        public void consultarStatusTelefonoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, object userState) {
            if ((this.consultarStatusTelefonoOperationCompleted == null)) {
                this.consultarStatusTelefonoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarStatusTelefonoOperationCompleted);
            }
            this.InvokeAsync("consultarStatusTelefono", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie}, this.consultarStatusTelefonoOperationCompleted, userState);
        }
        
        private void OnconsultarStatusTelefonoOperationCompleted(object arg) {
            if ((this.consultarStatusTelefonoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarStatusTelefonoCompleted(this, new consultarStatusTelefonoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/cambiarStatusTelefono", RequestElementName="cambiarStatusTelefonoRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string cambiarStatusTelefono(
                    ref string idTransaccion, 
                    string ipAplicacion, 
                    string nombreAplicacion, 
                    string usuarioAplicacion, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string cantNro, 
                    string region, 
                    string clasifRed, 
                    string codigoHlr, 
                    string tipoCliente, 
                    string statusInicial, 
                    string statusFinal, 
                    string usuario, 
                    out string mensajeResultado, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] out string subRc, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("esResumenRow", IsNullable=false)] out esResumenType[] esResumen, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("etDetalleRow", IsNullable=false)] out etDetalleType[] etDetalle, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("cambiarStatusTelefono", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        cantNro,
                        region,
                        clasifRed,
                        codigoHlr,
                        tipoCliente,
                        statusInicial,
                        statusFinal,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            subRc = ((string)(results[3]));
            esResumen = ((esResumenType[])(results[4]));
            etDetalle = ((etDetalleType[])(results[5]));
            itReturn = ((itReturnType[])(results[6]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cambiarStatusTelefonoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string cantNro, string region, string clasifRed, string codigoHlr, string tipoCliente, string statusInicial, string statusFinal, string usuario) {
            this.cambiarStatusTelefonoAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, cantNro, region, clasifRed, codigoHlr, tipoCliente, statusInicial, statusFinal, usuario, null);
        }
        
        /// <remarks/>
        public void cambiarStatusTelefonoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string cantNro, string region, string clasifRed, string codigoHlr, string tipoCliente, string statusInicial, string statusFinal, string usuario, object userState) {
            if ((this.cambiarStatusTelefonoOperationCompleted == null)) {
                this.cambiarStatusTelefonoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncambiarStatusTelefonoOperationCompleted);
            }
            this.InvokeAsync("cambiarStatusTelefono", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        cantNro,
                        region,
                        clasifRed,
                        codigoHlr,
                        tipoCliente,
                        statusInicial,
                        statusFinal,
                        usuario}, this.cambiarStatusTelefonoOperationCompleted, userState);
        }
        
        private void OncambiarStatusTelefonoOperationCompleted(object arg) {
            if ((this.cambiarStatusTelefonoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cambiarStatusTelefonoCompleted(this, new cambiarStatusTelefonoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/cambiarStatus", RequestElementName="cambiarStatusRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string cambiarStatus(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string status, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("cambiarStatus", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        status,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cambiarStatusAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string status, string usuario) {
            this.cambiarStatusAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, status, usuario, null);
        }
        
        /// <remarks/>
        public void cambiarStatusAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string status, string usuario, object userState) {
            if ((this.cambiarStatusOperationCompleted == null)) {
                this.cambiarStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncambiarStatusOperationCompleted);
            }
            this.InvokeAsync("cambiarStatus", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        status,
                        usuario}, this.cambiarStatusOperationCompleted, userState);
        }
        
        private void OncambiarStatusOperationCompleted(object arg) {
            if ((this.cambiarStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cambiarStatusCompleted(this, new cambiarStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/reversionCambioNumero", RequestElementName="reversionCambioNumeroRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string reversionCambioNumero(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("reversionCambioNumero", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        telefAn,
                        telefNv,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reversionCambioNumeroAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario) {
            this.reversionCambioNumeroAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, telefAn, telefNv, usuario, null);
        }
        
        /// <remarks/>
        public void reversionCambioNumeroAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario, object userState) {
            if ((this.reversionCambioNumeroOperationCompleted == null)) {
                this.reversionCambioNumeroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreversionCambioNumeroOperationCompleted);
            }
            this.InvokeAsync("reversionCambioNumero", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        telefAn,
                        telefNv,
                        usuario}, this.reversionCambioNumeroOperationCompleted, userState);
        }
        
        private void OnreversionCambioNumeroOperationCompleted(object arg) {
            if ((this.reversionCambioNumeroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reversionCambioNumeroCompleted(this, new reversionCambioNumeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/registroIMSIPortabilidad", RequestElementName="registroIMSIPortabilidadRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string registroIMSIPortabilidad(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string clasifRed, string tipoNroTelef, string nroSerie, string tipoCliente, string region, string material, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("registroIMSIPortabilidad", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        clasifRed,
                        tipoNroTelef,
                        nroSerie,
                        tipoCliente,
                        region,
                        material,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registroIMSIPortabilidadAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string clasifRed, string tipoNroTelef, string nroSerie, string tipoCliente, string region, string material, string usuario) {
            this.registroIMSIPortabilidadAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, clasifRed, tipoNroTelef, nroSerie, tipoCliente, region, material, usuario, null);
        }
        
        /// <remarks/>
        public void registroIMSIPortabilidadAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string clasifRed, string tipoNroTelef, string nroSerie, string tipoCliente, string region, string material, string usuario, object userState) {
            if ((this.registroIMSIPortabilidadOperationCompleted == null)) {
                this.registroIMSIPortabilidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistroIMSIPortabilidadOperationCompleted);
            }
            this.InvokeAsync("registroIMSIPortabilidad", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        clasifRed,
                        tipoNroTelef,
                        nroSerie,
                        tipoCliente,
                        region,
                        material,
                        usuario}, this.registroIMSIPortabilidadOperationCompleted, userState);
        }
        
        private void OnregistroIMSIPortabilidadOperationCompleted(object arg) {
            if ((this.registroIMSIPortabilidadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registroIMSIPortabilidadCompleted(this, new registroIMSIPortabilidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/actualizarNroTelef", RequestElementName="actualizarNroTelefRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string actualizarNroTelef(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("actualizarNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        telefAn,
                        telefNv,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario) {
            this.actualizarNroTelefAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, telefAn, telefNv, usuario, null);
        }
        
        /// <remarks/>
        public void actualizarNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string telefAn, string telefNv, string usuario, object userState) {
            if ((this.actualizarNroTelefOperationCompleted == null)) {
                this.actualizarNroTelefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarNroTelefOperationCompleted);
            }
            this.InvokeAsync("actualizarNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        telefAn,
                        telefNv,
                        usuario}, this.actualizarNroTelefOperationCompleted, userState);
        }
        
        private void OnactualizarNroTelefOperationCompleted(object arg) {
            if ((this.actualizarNroTelefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarNroTelefCompleted(this, new actualizarNroTelefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/eliminarNroTelef", RequestElementName="eliminarNroTelefRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string eliminarNroTelef(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("eliminarNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eliminarNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario) {
            this.eliminarNroTelefAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, usuario, null);
        }
        
        /// <remarks/>
        public void eliminarNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario, object userState) {
            if ((this.eliminarNroTelefOperationCompleted == null)) {
                this.eliminarNroTelefOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarNroTelefOperationCompleted);
            }
            this.InvokeAsync("eliminarNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        usuario}, this.eliminarNroTelefOperationCompleted, userState);
        }
        
        private void OneliminarNroTelefOperationCompleted(object arg) {
            if ((this.eliminarNroTelefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarNroTelefCompleted(this, new eliminarNroTelefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/listarMSISDNreserva", RequestElementName="listarMSISDNreservaRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string listarMSISDNreserva(
                    ref string idTransaccion, 
                    string ipAplicacion, 
                    string nombreAplicacion, 
                    string usuarioAplicacion, 
                    string region, 
                    string clasifRed, 
                    string codigoHlr, 
                    string tipoNroTelef, 
                    string tipoCliente, 
                    string clasifDesti, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string cantidadBuscar, 
                    string status, 
                    out string mensajeResultado, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("itWorkRow", IsNullable=false)] out itWorkType[] itWork, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("itNroTelRow", IsNullable=false)] out itNroTelType[] itNroTel) {
            object[] results = this.Invoke("listarMSISDNreserva", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        region,
                        clasifRed,
                        codigoHlr,
                        tipoNroTelef,
                        tipoCliente,
                        clasifDesti,
                        cantidadBuscar,
                        status});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            itWork = ((itWorkType[])(results[4]));
            itNroTel = ((itNroTelType[])(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void listarMSISDNreservaAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string region, string clasifRed, string codigoHlr, string tipoNroTelef, string tipoCliente, string clasifDesti, string cantidadBuscar, string status) {
            this.listarMSISDNreservaAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, region, clasifRed, codigoHlr, tipoNroTelef, tipoCliente, clasifDesti, cantidadBuscar, status, null);
        }
        
        /// <remarks/>
        public void listarMSISDNreservaAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string region, string clasifRed, string codigoHlr, string tipoNroTelef, string tipoCliente, string clasifDesti, string cantidadBuscar, string status, object userState) {
            if ((this.listarMSISDNreservaOperationCompleted == null)) {
                this.listarMSISDNreservaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarMSISDNreservaOperationCompleted);
            }
            this.InvokeAsync("listarMSISDNreserva", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        region,
                        clasifRed,
                        codigoHlr,
                        tipoNroTelef,
                        tipoCliente,
                        clasifDesti,
                        cantidadBuscar,
                        status}, this.listarMSISDNreservaOperationCompleted, userState);
        }
        
        private void OnlistarMSISDNreservaOperationCompleted(object arg) {
            if ((this.listarMSISDNreservaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarMSISDNreservaCompleted(this, new listarMSISDNreservaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/rollbackPelVendido", RequestElementName="rollbackPelVendidoRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string rollbackPelVendido(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroSerie, out string mensajeResultado, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] out string subRc, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("rollbackPelVendido", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroSerie});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            subRc = ((string)(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rollbackPelVendidoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroSerie) {
            this.rollbackPelVendidoAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroSerie, null);
        }
        
        /// <remarks/>
        public void rollbackPelVendidoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroSerie, object userState) {
            if ((this.rollbackPelVendidoOperationCompleted == null)) {
                this.rollbackPelVendidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrollbackPelVendidoOperationCompleted);
            }
            this.InvokeAsync("rollbackPelVendido", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroSerie}, this.rollbackPelVendidoOperationCompleted, userState);
        }
        
        private void OnrollbackPelVendidoOperationCompleted(object arg) {
            if ((this.rollbackPelVendidoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rollbackPelVendidoCompleted(this, new rollbackPelVendidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/cambiarStatusVendido", RequestElementName="cambiarStatusVendidoRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string cambiarStatusVendido(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlElementAttribute(DataType="integer")] out string subRc, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("cambiarStatusVendido", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            subRc = ((string)(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cambiarStatusVendidoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario) {
            this.cambiarStatusVendidoAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, usuario, null);
        }
        
        /// <remarks/>
        public void cambiarStatusVendidoAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string usuario, object userState) {
            if ((this.cambiarStatusVendidoOperationCompleted == null)) {
                this.cambiarStatusVendidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncambiarStatusVendidoOperationCompleted);
            }
            this.InvokeAsync("cambiarStatusVendido", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        usuario}, this.cambiarStatusVendidoOperationCompleted, userState);
        }
        
        private void OncambiarStatusVendidoOperationCompleted(object arg) {
            if ((this.cambiarStatusVendidoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cambiarStatusVendidoCompleted(this, new cambiarStatusVendidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/obtenerDatosNroTelef", RequestElementName="obtenerDatosNroTelefRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string obtenerDatosNroTelef(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string material, string nroSerie, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("nroSimcardsDataRow", IsNullable=false)] out nroSimcardsDataType[] nroSimcardsData, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("obtenerDatosNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        material,
                        nroSerie});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            nroSimcardsData = ((nroSimcardsDataType[])(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerDatosNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string material, string nroSerie) {
            this.obtenerDatosNroTelefAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, material, nroSerie, null);
        }
        
        /// <remarks/>
        public void obtenerDatosNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string material, string nroSerie, object userState) {
            if ((this.obtenerDatosNroTelefOperationCompleted == null)) {
                this.obtenerDatosNroTelefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerDatosNroTelefOperationCompleted);
            }
            this.InvokeAsync("obtenerDatosNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        material,
                        nroSerie}, this.obtenerDatosNroTelefOperationCompleted, userState);
        }
        
        private void OnobtenerDatosNroTelefOperationCompleted(object arg) {
            if ((this.obtenerDatosNroTelefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerDatosNroTelefCompleted(this, new obtenerDatosNroTelefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/obtenerNroTelefSerie", RequestElementName="obtenerNroTelefSerieRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string obtenerNroTelefSerie(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, ref string nroTelef, ref string nroSerie, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("obtenerNroTelefSerie", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie});
            idTransaccion = ((string)(results[1]));
            nroTelef = ((string)(results[2]));
            nroSerie = ((string)(results[3]));
            mensajeResultado = ((string)(results[4]));
            itReturn = ((itReturnType[])(results[5]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerNroTelefSerieAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie) {
            this.obtenerNroTelefSerieAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, nroSerie, null);
        }
        
        /// <remarks/>
        public void obtenerNroTelefSerieAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, object userState) {
            if ((this.obtenerNroTelefSerieOperationCompleted == null)) {
                this.obtenerNroTelefSerieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerNroTelefSerieOperationCompleted);
            }
            this.InvokeAsync("obtenerNroTelefSerie", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie}, this.obtenerNroTelefSerieOperationCompleted, userState);
        }
        
        private void OnobtenerNroTelefSerieOperationCompleted(object arg) {
            if ((this.obtenerNroTelefSerieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerNroTelefSerieCompleted(this, new obtenerNroTelefSerieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/obtenerNroTelef", RequestElementName="obtenerNroTelefRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string obtenerNroTelef(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, [System.Xml.Serialization.XmlArrayItemAttribute("itInputRow", IsNullable=false)] itMatSerType[] itInput, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itOutputRow", IsNullable=false)] out itTelSerType[] itOutput, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("obtenerNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        itInput});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itOutput = ((itTelSerType[])(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, itMatSerType[] itInput) {
            this.obtenerNroTelefAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, itInput, null);
        }
        
        /// <remarks/>
        public void obtenerNroTelefAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, itMatSerType[] itInput, object userState) {
            if ((this.obtenerNroTelefOperationCompleted == null)) {
                this.obtenerNroTelefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerNroTelefOperationCompleted);
            }
            this.InvokeAsync("obtenerNroTelef", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        itInput}, this.obtenerNroTelefOperationCompleted, userState);
        }
        
        private void OnobtenerNroTelefOperationCompleted(object arg) {
            if ((this.obtenerNroTelefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerNroTelefCompleted(this, new obtenerNroTelefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/obtenerNroTelef", RequestElementName="obtenerHLRRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string obtenerHLR(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, out string mensajeResultado, out string codigoHlr, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("obtenerHLR", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            codigoHlr = ((string)(results[3]));
            itReturn = ((itReturnType[])(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerHLRAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef) {
            this.obtenerHLRAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, null);
        }
        
        /// <remarks/>
        public void obtenerHLRAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, object userState) {
            if ((this.obtenerHLROperationCompleted == null)) {
                this.obtenerHLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerHLROperationCompleted);
            }
            this.InvokeAsync("obtenerHLR", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef}, this.obtenerHLROperationCompleted, userState);
        }
        
        private void OnobtenerHLROperationCompleted(object arg) {
            if ((this.obtenerHLRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerHLRCompleted(this, new obtenerHLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ws/sap/simcards/actualizarSimcardPorReposicion", RequestElementName="actualizarSimcardPorReposicionRequest", RequestNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", ResponseNamespace="http://claro.com.pe/eai/ws/sap/simcards/types", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("codigoResultado")]
        public string actualizarSimcardPorReposicion(ref string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, string descripcionProducto, string usuario, out string mensajeResultado, [System.Xml.Serialization.XmlArrayItemAttribute("itReturnRow", IsNullable=false)] out itReturnType[] itReturn) {
            object[] results = this.Invoke("actualizarSimcardPorReposicion", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie,
                        descripcionProducto,
                        usuario});
            idTransaccion = ((string)(results[1]));
            mensajeResultado = ((string)(results[2]));
            itReturn = ((itReturnType[])(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarSimcardPorReposicionAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, string descripcionProducto, string usuario) {
            this.actualizarSimcardPorReposicionAsync(idTransaccion, ipAplicacion, nombreAplicacion, usuarioAplicacion, nroTelef, nroSerie, descripcionProducto, usuario, null);
        }
        
        /// <remarks/>
        public void actualizarSimcardPorReposicionAsync(string idTransaccion, string ipAplicacion, string nombreAplicacion, string usuarioAplicacion, string nroTelef, string nroSerie, string descripcionProducto, string usuario, object userState) {
            if ((this.actualizarSimcardPorReposicionOperationCompleted == null)) {
                this.actualizarSimcardPorReposicionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarSimcardPorReposicionOperationCompleted);
            }
            this.InvokeAsync("actualizarSimcardPorReposicion", new object[] {
                        idTransaccion,
                        ipAplicacion,
                        nombreAplicacion,
                        usuarioAplicacion,
                        nroTelef,
                        nroSerie,
                        descripcionProducto,
                        usuario}, this.actualizarSimcardPorReposicionOperationCompleted, userState);
        }
        
        private void OnactualizarSimcardPorReposicionOperationCompleted(object arg) {
            if ((this.actualizarSimcardPorReposicionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarSimcardPorReposicionCompleted(this, new actualizarSimcardPorReposicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itDataType {
        
        private string nroTelefField;
        
        private string codigoHlrField;
        
        private string descClredField;
        
        private string descRegioField;
        
        private string descTpcliField;
        
        private string descTptlfField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                return this.codigoHlrField;
            }
            set {
                this.codigoHlrField = value;
            }
        }
        
        /// <remarks/>
        public string descClred {
            get {
                return this.descClredField;
            }
            set {
                this.descClredField = value;
            }
        }
        
        /// <remarks/>
        public string descRegio {
            get {
                return this.descRegioField;
            }
            set {
                this.descRegioField = value;
            }
        }
        
        /// <remarks/>
        public string descTpcli {
            get {
                return this.descTpcliField;
            }
            set {
                this.descTpcliField = value;
            }
        }
        
        /// <remarks/>
        public string descTptlf {
            get {
                return this.descTptlfField;
            }
            set {
                this.descTptlfField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itTelSerType {
        
        private string nroTelefField;
        
        private string nroSerieField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
        
        /// <remarks/>
        public string nroSerie {
            get {
                return this.nroSerieField;
            }
            set {
                this.nroSerieField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itMatSerType {
        
        private string materialField;
        
        private string nroSerieField;
        
        /// <remarks/>
        public string material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        public string nroSerie {
            get {
                return this.nroSerieField;
            }
            set {
                this.nroSerieField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class nroSimcardsDataType {
        
        private string nroTelefField;
        
        private string regionField;
        
        private string codigoRedField;
        
        private string codigoHlrField;
        
        private string statusField;
        
        private System.DateTime fecCargaField;
        
        private string usoCargaField;
        
        private string tipoNroField;
        
        private string loteBscsField;
        
        private string tipoClienteField;
        
        private string codigoDestField;
        
        private string loteDestField;
        
        private string loteMktField;
        
        private string serNrField;
        
        private string matNrField;
        
        private string kunNrField;
        
        private string matNrAntigField;
        
        private System.DateTime fecTraficoField;
        
        private string bmField;
        
        private string tipoDocClienteField;
        
        private string clienteField;
        
        private string statusChipRepField;
        
        private System.DateTime fecCambioField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
        
        /// <remarks/>
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public string codigoRed {
            get {
                return this.codigoRedField;
            }
            set {
                this.codigoRedField = value;
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                return this.codigoHlrField;
            }
            set {
                this.codigoHlrField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime fecCarga {
            get {
                return this.fecCargaField;
            }
            set {
                this.fecCargaField = value;
            }
        }
        
        /// <remarks/>
        public string usoCarga {
            get {
                return this.usoCargaField;
            }
            set {
                this.usoCargaField = value;
            }
        }
        
        /// <remarks/>
        public string tipoNro {
            get {
                return this.tipoNroField;
            }
            set {
                this.tipoNroField = value;
            }
        }
        
        /// <remarks/>
        public string loteBscs {
            get {
                return this.loteBscsField;
            }
            set {
                this.loteBscsField = value;
            }
        }
        
        /// <remarks/>
        public string tipoCliente {
            get {
                return this.tipoClienteField;
            }
            set {
                this.tipoClienteField = value;
            }
        }
        
        /// <remarks/>
        public string codigoDest {
            get {
                return this.codigoDestField;
            }
            set {
                this.codigoDestField = value;
            }
        }
        
        /// <remarks/>
        public string loteDest {
            get {
                return this.loteDestField;
            }
            set {
                this.loteDestField = value;
            }
        }
        
        /// <remarks/>
        public string loteMkt {
            get {
                return this.loteMktField;
            }
            set {
                this.loteMktField = value;
            }
        }
        
        /// <remarks/>
        public string serNr {
            get {
                return this.serNrField;
            }
            set {
                this.serNrField = value;
            }
        }
        
        /// <remarks/>
        public string matNr {
            get {
                return this.matNrField;
            }
            set {
                this.matNrField = value;
            }
        }
        
        /// <remarks/>
        public string kunNr {
            get {
                return this.kunNrField;
            }
            set {
                this.kunNrField = value;
            }
        }
        
        /// <remarks/>
        public string matNrAntig {
            get {
                return this.matNrAntigField;
            }
            set {
                this.matNrAntigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime fecTrafico {
            get {
                return this.fecTraficoField;
            }
            set {
                this.fecTraficoField = value;
            }
        }
        
        /// <remarks/>
        public string bm {
            get {
                return this.bmField;
            }
            set {
                this.bmField = value;
            }
        }
        
        /// <remarks/>
        public string tipoDocCliente {
            get {
                return this.tipoDocClienteField;
            }
            set {
                this.tipoDocClienteField = value;
            }
        }
        
        /// <remarks/>
        public string cliente {
            get {
                return this.clienteField;
            }
            set {
                this.clienteField = value;
            }
        }
        
        /// <remarks/>
        public string statusChipRep {
            get {
                return this.statusChipRepField;
            }
            set {
                this.statusChipRepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime fecCambio {
            get {
                return this.fecCambioField;
            }
            set {
                this.fecCambioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itNroTelType {
        
        private string nroTelefField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itWorkType {
        
        private string nroTelefField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class etDetalleType {
        
        private string correlField;
        
        private string rangoInicialField;
        
        private string rangoFinalField;
        
        private string cantidadField;
        
        private string regionField;
        
        private string inCField;
        
        private string codigoHlrField;
        
        private string regionDesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string correl {
            get {
                return this.correlField;
            }
            set {
                this.correlField = value;
            }
        }
        
        /// <remarks/>
        public string rangoInicial {
            get {
                return this.rangoInicialField;
            }
            set {
                this.rangoInicialField = value;
            }
        }
        
        /// <remarks/>
        public string rangoFinal {
            get {
                return this.rangoFinalField;
            }
            set {
                this.rangoFinalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string cantidad {
            get {
                return this.cantidadField;
            }
            set {
                this.cantidadField = value;
            }
        }
        
        /// <remarks/>
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public string inC {
            get {
                return this.inCField;
            }
            set {
                this.inCField = value;
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                return this.codigoHlrField;
            }
            set {
                this.codigoHlrField = value;
            }
        }
        
        /// <remarks/>
        public string regionDes {
            get {
                return this.regionDesField;
            }
            set {
                this.regionDesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class esResumenType {
        
        private string cantSolField;
        
        private string cantCargField;
        
        private string codigoHlrField;
        
        private string regionField;
        
        private string regionDesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string cantSol {
            get {
                return this.cantSolField;
            }
            set {
                this.cantSolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string cantCarg {
            get {
                return this.cantCargField;
            }
            set {
                this.cantCargField = value;
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                return this.codigoHlrField;
            }
            set {
                this.codigoHlrField = value;
            }
        }
        
        /// <remarks/>
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public string regionDes {
            get {
                return this.regionDesField;
            }
            set {
                this.regionDesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class gtOutTabType {
        
        private string codRetField;
        
        private string desCodField;
        
        private string textoField;
        
        private string statusSimField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string codRet {
            get {
                return this.codRetField;
            }
            set {
                this.codRetField = value;
            }
        }
        
        /// <remarks/>
        public string desCod {
            get {
                return this.desCodField;
            }
            set {
                this.desCodField = value;
            }
        }
        
        /// <remarks/>
        public string texto {
            get {
                return this.textoField;
            }
            set {
                this.textoField = value;
            }
        }
        
        /// <remarks/>
        public string statusSim {
            get {
                return this.statusSimField;
            }
            set {
                this.statusSimField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itNumTelefType {
        
        private string nroTelefField;
        
        private string marcCortaField;
        
        private string codigRtpeField;
        
        private string pniAbiertoField;
        
        private string empresaField;
        
        private string bezeiField;
        
        private string descrRedField;
        
        private string codigoHlrField;
        
        private string descrStatusField;
        
        /// <remarks/>
        public string nroTelef {
            get {
                return this.nroTelefField;
            }
            set {
                this.nroTelefField = value;
            }
        }
        
        /// <remarks/>
        public string marcCorta {
            get {
                return this.marcCortaField;
            }
            set {
                this.marcCortaField = value;
            }
        }
        
        /// <remarks/>
        public string codigRtpe {
            get {
                return this.codigRtpeField;
            }
            set {
                this.codigRtpeField = value;
            }
        }
        
        /// <remarks/>
        public string pniAbierto {
            get {
                return this.pniAbiertoField;
            }
            set {
                this.pniAbiertoField = value;
            }
        }
        
        /// <remarks/>
        public string empresa {
            get {
                return this.empresaField;
            }
            set {
                this.empresaField = value;
            }
        }
        
        /// <remarks/>
        public string bezei {
            get {
                return this.bezeiField;
            }
            set {
                this.bezeiField = value;
            }
        }
        
        /// <remarks/>
        public string descrRed {
            get {
                return this.descrRedField;
            }
            set {
                this.descrRedField = value;
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                return this.codigoHlrField;
            }
            set {
                this.codigoHlrField = value;
            }
        }
        
        /// <remarks/>
        public string descrStatus {
            get {
                return this.descrStatusField;
            }
            set {
                this.descrStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1532.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ws/sap/simcards/types")]
    public partial class itReturnType {
        
        private string tipoField;
        
        private string claseMensajeField;
        
        private string numeroMensajeField;
        
        private string mensajeField;
        
        private string numeroLogField;
        
        private string numeroConsecutivoInternoField;
        
        private string mensajeV1Field;
        
        private string mensajeV2Field;
        
        private string mensajeV3Field;
        
        private string mensajeV4Field;
        
        private string parametroField;
        
        private string lineasField;
        
        private string campoField;
        
        private string sistemaField;
        
        private string codigoField;
        
        /// <remarks/>
        public string tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public string claseMensaje {
            get {
                return this.claseMensajeField;
            }
            set {
                this.claseMensajeField = value;
            }
        }
        
        /// <remarks/>
        public string numeroMensaje {
            get {
                return this.numeroMensajeField;
            }
            set {
                this.numeroMensajeField = value;
            }
        }
        
        /// <remarks/>
        public string mensaje {
            get {
                return this.mensajeField;
            }
            set {
                this.mensajeField = value;
            }
        }
        
        /// <remarks/>
        public string numeroLog {
            get {
                return this.numeroLogField;
            }
            set {
                this.numeroLogField = value;
            }
        }
        
        /// <remarks/>
        public string numeroConsecutivoInterno {
            get {
                return this.numeroConsecutivoInternoField;
            }
            set {
                this.numeroConsecutivoInternoField = value;
            }
        }
        
        /// <remarks/>
        public string mensajeV1 {
            get {
                return this.mensajeV1Field;
            }
            set {
                this.mensajeV1Field = value;
            }
        }
        
        /// <remarks/>
        public string mensajeV2 {
            get {
                return this.mensajeV2Field;
            }
            set {
                this.mensajeV2Field = value;
            }
        }
        
        /// <remarks/>
        public string mensajeV3 {
            get {
                return this.mensajeV3Field;
            }
            set {
                this.mensajeV3Field = value;
            }
        }
        
        /// <remarks/>
        public string mensajeV4 {
            get {
                return this.mensajeV4Field;
            }
            set {
                this.mensajeV4Field = value;
            }
        }
        
        /// <remarks/>
        public string parametro {
            get {
                return this.parametroField;
            }
            set {
                this.parametroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string lineas {
            get {
                return this.lineasField;
            }
            set {
                this.lineasField = value;
            }
        }
        
        /// <remarks/>
        public string campo {
            get {
                return this.campoField;
            }
            set {
                this.campoField = value;
            }
        }
        
        /// <remarks/>
        public string sistema {
            get {
                return this.sistemaField;
            }
            set {
                this.sistemaField = value;
            }
        }
        
        /// <remarks/>
        public string codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void consultarTelefonoDispCompletedEventHandler(object sender, consultarTelefonoDispCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarTelefonoDispCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarTelefonoDispCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itDataType[] itData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itDataType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void consultarTelefonoTodosCompletedEventHandler(object sender, consultarTelefonoTodosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarTelefonoTodosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarTelefonoTodosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itNumTelefType[] itNumTelef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itNumTelefType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void consultarStatusTelefonoCompletedEventHandler(object sender, consultarStatusTelefonoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarStatusTelefonoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarStatusTelefonoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public gtOutTabType[] gtOutTab {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gtOutTabType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void cambiarStatusTelefonoCompletedEventHandler(object sender, cambiarStatusTelefonoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cambiarStatusTelefonoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cambiarStatusTelefonoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string subRc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public esResumenType[] esResumen {
            get {
                this.RaiseExceptionIfNecessary();
                return ((esResumenType[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public etDetalleType[] etDetalle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((etDetalleType[])(this.results[5]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void cambiarStatusCompletedEventHandler(object sender, cambiarStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cambiarStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cambiarStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void reversionCambioNumeroCompletedEventHandler(object sender, reversionCambioNumeroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reversionCambioNumeroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reversionCambioNumeroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void registroIMSIPortabilidadCompletedEventHandler(object sender, registroIMSIPortabilidadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registroIMSIPortabilidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registroIMSIPortabilidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void actualizarNroTelefCompletedEventHandler(object sender, actualizarNroTelefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarNroTelefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarNroTelefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void eliminarNroTelefCompletedEventHandler(object sender, eliminarNroTelefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eliminarNroTelefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eliminarNroTelefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void listarMSISDNreservaCompletedEventHandler(object sender, listarMSISDNreservaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarMSISDNreservaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarMSISDNreservaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itWorkType[] itWork {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itWorkType[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public itNroTelType[] itNroTel {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itNroTelType[])(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void rollbackPelVendidoCompletedEventHandler(object sender, rollbackPelVendidoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rollbackPelVendidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rollbackPelVendidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string subRc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void cambiarStatusVendidoCompletedEventHandler(object sender, cambiarStatusVendidoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cambiarStatusVendidoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cambiarStatusVendidoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string subRc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void obtenerDatosNroTelefCompletedEventHandler(object sender, obtenerDatosNroTelefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerDatosNroTelefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerDatosNroTelefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public nroSimcardsDataType[] nroSimcardsData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((nroSimcardsDataType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void obtenerNroTelefSerieCompletedEventHandler(object sender, obtenerNroTelefSerieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerNroTelefSerieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerNroTelefSerieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string nroTelef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string nroSerie {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void obtenerNroTelefCompletedEventHandler(object sender, obtenerNroTelefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerNroTelefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerNroTelefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itTelSerType[] itOutput {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itTelSerType[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void obtenerHLRCompletedEventHandler(object sender, obtenerHLRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerHLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerHLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string codigoHlr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void actualizarSimcardPorReposicionCompletedEventHandler(object sender, actualizarSimcardPorReposicionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarSimcardPorReposicionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarSimcardPorReposicionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string idTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeResultado {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public itReturnType[] itReturn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((itReturnType[])(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591